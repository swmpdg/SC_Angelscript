<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="doc.css"></link>
<title>CScheduler</title>
</head>
<body>
<h1>CScheduler</h1>
<p>Scheduler for calling functions.<br/>Supports up to 8 parameters for function or method calls.</p>
<p>Type: Reference type</p>
<div><h2>Methods</h2>
<table><tr><th>Declaration</th>
<th>Description</th>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetTimeout(?& in thisObject, const string& in szFunction, float flDelay, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function after flDelay seconds. Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/>The given function is called an infinite number of times.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/>The given function is called an infinite number of times.<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>CScheduledFunction@ SetInterval(?& in thisObject, const string& in szFunction, float flRepeatTime, int iRepeatCount, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in, ?& in)</td>
<td>Adds a timer that calls the given function every flRepeatTime seconds,<br/>for iRepeatCount times (or infinite times if REPEAT_INFINITE_TIMES).<br/> Calls object methods.</td>
</tr>
<tr><td>void RemoveTimer(CScheduledFunction@ pFunction)</td>
<td>Removes the given function from the list of functions to call.</td>
</tr>
<tr><td>CScheduledFunction@ GetCurrentFunction() const</td>
<td>Returns the function currently being executed, if any.</td>
</tr>
<tr><td>void ClearTimerList()</td>
<td>Removes all queued functions from the list of functions to call.</td>
</tr>
</table>
</div>
<div><h2>Properties</h2>
<table><tr><th>Declaration</th>
<th>Description</th>
</tr>
<tr><td>const int REPEAT_INFINITE_TIMES</td>
<td>If passed to AddTimer, causes the given function to be called infinite times</td>
</tr>
</table>
</div>
</body>
</html>
