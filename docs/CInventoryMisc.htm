<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="doc.css"></link>
<title>CInventoryMisc</title>
</head>
<body>
<h1>CInventoryMisc</h1>
<p>Misc functions for handling inventories across classes</p>
<p>Type: Reference type</p>
<div><h2>Methods</h2>
<table><tr><th>Declaration</th>
<th>Description</th>
</tr>
<tr><td>bool IsValidInventoryHolder(CBaseEntity@ pOther)</td>
<td>Returns whether the given entity is a valid inventory holder</td>
</tr>
<tr><td>bool CheckTokenStringRule(const string& in szRule, const string& in szValue)</td>
<td>Returns whether the given value is in the given rule</td>
</tr>
<tr><td>int Count(CBaseMonster@ pHolder)</td>
<td>Counts the number of inventory items held by the given holder</td>
</tr>
<tr><td>float GetWeight(CBaseMonster@ pHolder)</td>
<td>Gets the total weight of all inventory items held by the given holder</td>
</tr>
<tr><td>int ExistsInGroup(const string& in szGroup)</td>
<td>Counts all the existing items in a group</td>
</tr>
<tr><td>int HaveNumFromGroup(CBaseMonster@ pHolder, const string& in szGroup)</td>
<td>Returns count of how many items someone holds of a group</td>
</tr>
<tr><td>bool HasAllInGroup(CBaseMonster@ pHolder, const string& in szGroup)</td>
<td>Returns true if is holding all items of a group</td>
</tr>
<tr><td>void ClearAll(CBaseMonster@ pHolder)</td>
<td>Clears all held inventory</td>
</tr>
<tr><td>void PurgeOnRespawn(CBaseMonster@ pHolder)</td>
<td>Clears all held inventory that should be dropped on respawning</td>
</tr>
</table>
</div>
</body>
</html>
