<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="doc.css"></link>
<title>List</title>
</head>
<body>
<h1>List</h1>
<p>Linked list</p>
<p>Type: Reference type</p>
<div><h2>Methods</h2>
<table><tr><th>Declaration</th>
<th>Description</th>
</tr>
<tr><td>List<T>@ Create(int& in type)</td>
<td>Instantiate an empty list</td>
</tr>
<tr><td>List<T>@ Create(int& in type, const List<T>& in other)</td>
<td>Instantiate an empty list</td>
</tr>
<tr><td>void Clear()</td>
<td>Clears the list</td>
</tr>
<tr><td>void Copy(const List<T>& in other)</td>
<td>Copies the given list into this one</td>
</tr>
<tr><td>bool IsEmpty() const</td>
<td>Returns whether the list is empty</td>
</tr>
<tr><td>size_t Length() const</td>
<td>Gets the length of the list</td>
</tr>
<tr><td>ForwardListIterator Begin() const</td>
<td>Returns an iterator to the beginning of the list</td>
</tr>
<tr><td>ForwardListIterator End() const</td>
<td>Returns an iterator to the end of the list</td>
</tr>
<tr><td>ReverseListIterator RBegin() const</td>
<td>Returns an iterator to the reverse beginning of the list</td>
</tr>
<tr><td>ReverseListIterator REnd() const</td>
<td>Returns an iterator to the reverse end of the list</td>
</tr>
<tr><td>T& Get(const ForwardListIterator& in it) const</td>
<td>Gets the value out of the iterator</td>
</tr>
<tr><td>T& Get(const ReverseListIterator& in it) const</td>
<td>Gets the value out of the iterator</td>
</tr>
<tr><td>T& GetHead() const</td>
<td>Returns the value at the head of the list</td>
</tr>
<tr><td>T& GetTail() const</td>
<td>Returns the value at the tail of the list</td>
</tr>
<tr><td>T& At(size_t uiIndex) const</td>
<td>Returns the value at the given index</td>
</tr>
<tr><td>void PopHead()</td>
<td>Removes the head of the list, and returns its value</td>
</tr>
<tr><td>void PopTail()</td>
<td>Removes the tail of the list, and returns its value</td>
</tr>
<tr><td>void PushHead(const T& in data)</td>
<td>Pushes the value at the head of the list</td>
</tr>
<tr><td>void PushTail(const T& in data)</td>
<td>Pushes the value at the tail of the list</td>
</tr>
<tr><td>void Add(size_t uiIndex, const T& in data)</td>
<td>Adds the given value at the given index<br/>Index must be between 0 and Length, inclusive</td>
</tr>
<tr><td>void Remove(size_t uiIndex)</td>
<td>Removes the given node</td>
</tr>
<tr><td>ForwardListIterator Remove(const ForwardListIterator& in it)</td>
<td>Removes the given node. Returns an iterator to the next node.</td>
</tr>
<tr><td>ReverseListIterator Remove(const ReverseListIterator& in it)</td>
<td>Removes the given node. Returns an iterator to the next node.</td>
</tr>
<tr><td>void Set(size_t uiIndex, const T& in data)</td>
<td>Sets the data at the given node</td>
</tr>
<tr><td>void Set(const ForwardListIterator& in it, T& in data)</td>
<td>Sets the data at the given node</td>
</tr>
<tr><td>void Set(const ReverseListIterator& in it, T& in data)</td>
<td>Sets the data at the given node</td>
</tr>
</table>
</div>
</body>
</html>
