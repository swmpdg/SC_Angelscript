<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="doc.css"></link>
<title>CustomKeyvalues</title>
</head>
<body>
<h1>CustomKeyvalues</h1>
<p>Custom keyvalues. Do not keep handles to instances of these objects.</p>
<p>Type: Reference type</p>
<div><h2>Methods</h2>
<table><tr><th>Declaration</th>
<th>Description</th>
</tr>
<tr><td>bool SetKeyvalue(const string& in szKey, const string& in szValue)</td>
<td>Sets a custom keyvalue to the given string value.</br>Returns true if the key existed and was overwritten.</td>
</tr>
<tr><td>bool SetKeyvalue(const string& in szKey, const Vector& in vecValue)</td>
<td>Sets a custom keyvalue to the given vector value.</br>Returns true if the key existed and was overwritten.</td>
</tr>
<tr><td>bool SetKeyvalue(const string& in szKey, float flValue)</td>
<td>Sets a custom keyvalue to the given float value.</br>Returns true if the key existed and was overwritten.</td>
</tr>
<tr><td>bool SetKeyvalue(const string& in szKey, int iValue)</td>
<td>Sets a custom keyvalue to the given integer value.</br>Returns true if the key existed and was overwritten.</td>
</tr>
<tr><td>void InitializeKeyvalueWithDefault(const string& in szKey)</td>
<td>Initializes a keyvalue with the default value for its type.</td>
</tr>
<tr><td>bool HasKeyvalue(const string& in szKey) const</td>
<td>Returns whether the keyvalue with the given name exists.</td>
</tr>
<tr><td>CustomKeyvalue GetKeyvalue(const string& in szKey) const</td>
<td>Gets the keyvalue with the given name. Check if it exists by calling Exists.</td>
</tr>
</table>
</div>
</body>
</html>
